#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

def test_credentials_file():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ credentials.json"""
    print("üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ credentials.json...")
    
    credentials_file = Path("credentials.json")
    if not credentials_file.exists():
        print("‚ùå –§–∞–π–ª credentials.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        import json
        with open(credentials_file, 'r') as f:
            creds = json.load(f)
        
        required_fields = ['type', 'project_id', 'private_key_id', 'private_key', 'client_email']
        missing_fields = [field for field in required_fields if field not in creds]
        
        if missing_fields:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è –≤ credentials.json: {missing_fields}")
            return False
        
        print(f"‚úÖ –§–∞–π–ª credentials.json –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        print(f"   –¢–∏–ø: {creds['type']}")
        print(f"   –ü—Ä–æ–µ–∫—Ç: {creds['project_id']}")
        print(f"   Email: {creds['client_email']}")
        return True
        
    except json.JSONDecodeError:
        print("‚ùå –§–∞–π–ª credentials.json —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π JSON")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è credentials.json: {e}")
        return False

def test_google_sheets_auth():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Google Sheets"""
    print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Google Sheets...")
    
    try:
        import gspread
        from oauth2client.service_account import ServiceAccountCredentials
        
        scope = [
            'https://spreadsheets.google.com/feeds',
            'https://www.googleapis.com/auth/drive'
        ]
        
        creds = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', scope)
        client = gspread.authorize(creds)
        
        print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        return client
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return None

def test_sheet_access(client, sheet_url):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ"""
    if not client or not sheet_url:
        return False
    
    print(f"\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ...")
    print(f"   URL: {sheet_url}")
    
    try:
        sheet = client.open_by_url(sheet_url).sheet1
        title = sheet.title
        rows_count = len(sheet.get_all_values())
        
        print(f"‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ —É—Å–ø–µ—à–µ–Ω")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {title}")
        print(f"   –°—Ç—Ä–æ–∫: {rows_count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
        if rows_count > 0:
            print(f"   –ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏:")
            for i, row in enumerate(sheet.get_all_values()[:3]):
                preview = row[0][:50] + "..." if len(row[0]) > 50 else row[0]
                print(f"     {i+1}. {preview}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ: {e}")
        return False

def test_config_urls():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ URL –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\n‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        from config.settings import config_manager
        config = config_manager.load_config()
        
        print(f"   B2B URL: {config.google_sheets.b2b_sheet_url or '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"   B2C URL: {config.google_sheets.b2c_sheet_url or '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"   Credentials: {config.google_sheets.credentials_file}")
        print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª: {config.google_sheets.update_interval // 3600} —á–∞—Å–æ–≤")
        
        return config.google_sheets.b2b_sheet_url or config.google_sheets.b2c_sheet_url
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Sheets")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ credentials
    if not test_credentials_file():
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("   1. –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ Google Cloud Console")
        print("   2. –°–∫–∞—á–∞–π—Ç–µ JSON –∫–ª—é—á –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ credentials.json")
        print("   3. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–∞–º —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É")
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    has_urls = test_config_urls()
    if not has_urls:
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("   –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("   SHEET_URL_B2B=https://docs.google.com/spreadsheets/d/YOUR_B2B_SHEET_ID/edit")
        print("   SHEET_URL_B2C=https://docs.google.com/spreadsheets/d/YOUR_B2C_SHEET_ID/edit")
        return
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    client = test_google_sheets_auth()
    if not client:
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞ credentials.json")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∞–∫—Ç–∏–≤–µ–Ω")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets API")
        return
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–∞–º
    try:
        from config.settings import config_manager
        config = config_manager.load_config()
        
        b2b_success = test_sheet_access(client, config.google_sheets.b2b_sheet_url)
        b2c_success = test_sheet_access(client, config.google_sheets.b2c_sheet_url)
        
        if b2b_success or b2c_success:
            print("\n‚úÖ Google Sheets –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print("   –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        else:
            print("\n‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –Ω–∏ –∫ –æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ")
            print("üí° –†–µ—à–µ–Ω–∏–µ:")
            print("   1. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–∞–º —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É")
            print("   2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ email —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑ credentials.json")
            print("   3. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –∫–∞–∫ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ Google Sheets")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    main()

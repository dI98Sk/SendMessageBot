#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤ AAA –∏ GUS
"""
import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from config.settings import config_manager
from core.broadcaster import EnhancedBroadcaster
from utils.logger import get_logger

async def test_aaa_broadcaster():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AAA –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–∞"""
    print("üî• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AAA Broadcaster")
    print("=" * 50)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = config_manager.load_config()
        logger = get_logger("test_aaa", config.logging)
        
        # –°–æ–∑–¥–∞–µ–º AAA –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä
        aaa_broadcaster = EnhancedBroadcaster(
            config=config,
            name="AAA_Test_Broadcaster",
            targets=config.targets,  # –¢–µ—Å—Ç–æ–≤—ã–µ —á–∞—Ç—ã
            messages=config.aaa_messages,
            session_name="sessions/acc1"  # –û–ø—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
        )
        
        print(f"‚úÖ AAA Broadcaster —Å–æ–∑–¥–∞–Ω")
        print(f"üéØ –¶–µ–ª–µ–≤—ã—Ö —á–∞—Ç–æ–≤: {len(config.targets)}")
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {len(config.aaa_messages)}")
        print(f"üì± –°–µ—Å—Å–∏—è: sessions/acc1")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        await aaa_broadcaster._ensure_connection()
        
        print("‚úÖ AAA Broadcaster –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AAA: {e}")
        logger.exception(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AAA: {e}")

async def test_gus_broadcaster():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GUS –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–∞"""
    print("\nü™ø –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GUS Broadcaster")
    print("=" * 50)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = config_manager.load_config()
        logger = get_logger("test_gus", config.logging)
        
        # –°–æ–∑–¥–∞–µ–º GUS –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä
        gus_broadcaster = EnhancedBroadcaster(
            config=config,
            name="GUS_Test_Broadcaster",
            targets=config.targets,  # –¢–µ—Å—Ç–æ–≤—ã–µ —á–∞—Ç—ã
            messages=config.gus_messages,
            session_name="sessions/acc2"  # –†–æ–∑–Ω–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
        )
        
        print(f"‚úÖ GUS Broadcaster —Å–æ–∑–¥–∞–Ω")
        print(f"üéØ –¶–µ–ª–µ–≤—ã—Ö —á–∞—Ç–æ–≤: {len(config.targets)}")
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {len(config.gus_messages)}")
        print(f"üì± –°–µ—Å—Å–∏—è: sessions/acc2")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        await gus_broadcaster._ensure_connection()
        
        print("‚úÖ GUS Broadcaster –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è GUS: {e}")
        logger.exception(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è GUS: {e}")

async def test_all_broadcasters():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤")
    print("=" * 60)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = config_manager.load_config()
        logger = get_logger("test_all", config.logging)
        
        print(f"üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        print(f"   üéØ –¢–µ—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–æ–≤: {len(config.targets)}")
        print(f"   üí¨ B2B —Å–æ–æ–±—â–µ–Ω–∏–π: {len(config.b2b_messages)}")
        print(f"   üí¨ B2C —Å–æ–æ–±—â–µ–Ω–∏–π: {len(config.b2c_messages)}")
        print(f"   üí¨ AAA —Å–æ–æ–±—â–µ–Ω–∏–π: {len(config.aaa_messages)}")
        print(f"   üí¨ GUS —Å–æ–æ–±—â–µ–Ω–∏–π: {len(config.gus_messages)}")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä—ã
        broadcasters = [
            EnhancedBroadcaster(
                config=config,
                name="B2B_Test",
                targets=config.targets,
                messages=config.b2b_messages,
                session_name="sessions/acc1"
            ),
            EnhancedBroadcaster(
                config=config,
                name="B2C_Test",
                targets=config.targets,
                messages=config.b2c_messages,
                session_name="sessions/acc2"
            ),
            EnhancedBroadcaster(
                config=config,
                name="AAA_Test",
                targets=config.targets,
                messages=config.aaa_messages,
                session_name="sessions/acc1"
            ),
            EnhancedBroadcaster(
                config=config,
                name="GUS_Test",
                targets=config.targets,
                messages=config.gus_messages,
                session_name="sessions/acc2"
            )
        ]
        
        print(f"\nüîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∞–∫–∫–∞—É–Ω—Ç–∞–º...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–∞
        for broadcaster in broadcasters:
            try:
                await broadcaster._ensure_connection()
                print(f"‚úÖ {broadcaster.name} - –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            except Exception as e:
                print(f"‚ùå {broadcaster.name} - –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        
        print(f"\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"üìä –í—Å–µ–≥–æ –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤: {len(broadcasters)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        logger.exception(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–´–• –ë–†–û–£–î–ö–ê–°–¢–ï–†–û–í")
    print("=" * 60)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä—ã AAA –∏ GUS")
    print("=" * 60)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:")
        print("1. –¢–µ—Å—Ç AAA Broadcaster (acc1 - –û–ü–¢–û–í–´–ô)")
        print("2. –¢–µ—Å—Ç GUS Broadcaster (acc2 - –†–û–ó–ù–ò–ß–ù–´–ô)")
        print("3. –¢–µ—Å—Ç –≤—Å–µ—Ö –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤")
        print("4. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
        
        if choice == "1":
            await test_aaa_broadcaster()
        elif choice == "2":
            await test_gus_broadcaster()
        elif choice == "3":
            await test_all_broadcasters()
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

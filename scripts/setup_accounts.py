#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∞–∫–∫–∞—É–Ω—Ç–æ–≤
"""
import asyncio
import os
import sys
from pathlib import Path
from telethon import TelegramClient
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def setup_account(session_name: str, account_type: str):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞"""
    print(f"\nüîê –ù–ê–°–¢–†–û–ô–ö–ê {account_type} –ê–ö–ö–ê–£–ù–¢–ê")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º API –¥–∞–Ω–Ω—ã–µ
    api_id = int(os.getenv("API_ID"))
    api_hash = os.getenv("API_HASH")
    
    print(f"üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –¥–ª—è {account_type} –∞–∫–∫–∞—É–Ω—Ç–∞...")
    print(f"üîë API_ID: {api_id}")
    print(f"üìù –°–µ—Å—Å–∏—è: {session_name}.session")
    print("\nüìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (+7XXXXXXXXXX):")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = TelegramClient(session_name, api_id, api_hash)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç (—ç—Ç–æ –∑–∞–ø—Ä–æ—Å–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)
        await client.start()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        account_id = me.id
        account_name = f"{me.first_name or ''} {me.last_name or ''}".strip()
        username = me.username or "–±–µ–∑ username"
        
        print(f"\n‚úÖ {account_type} –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print(f"üë§ –ò–º—è: {account_name}")
        print(f"üì± Username: @{username}")
        print(f"üÜî ID: {account_id}")
        print(f"üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {session_name}.session")
        
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        await client.disconnect()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ {account_type} –∞–∫–∫–∞—É–Ω—Ç–∞: {e}")
        try:
            await client.disconnect()
        except:
            pass

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM –ê–ö–ö–ê–£–ù–¢–û–í")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –¥–∞–Ω–Ω—ã–µ
    api_id = os.getenv("API_ID")
    api_hash = os.getenv("API_HASH")
    
    if not api_id or not api_hash:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã API_ID –∏ API_HASH –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤:")
    print("‚Ä¢ acc1 (–û–ü–¢–û–í–´–ô) - –¥–ª—è B2B –∏ AAA –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤")
    print("‚Ä¢ acc2 (–†–û–ó–ù–ò–ß–ù–´–ô) - –¥–ª—è B2C –∏ GUS –±—Ä–æ—É–¥–∫–∞—Å—Ç–µ—Ä–æ–≤")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
    await setup_account("sessions/acc1", "–û–ü–¢–û–í–´–ô")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞...")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—Ç–æ—Ä–æ–π –∞–∫–∫–∞—É–Ω—Ç
    await setup_account("sessions/acc2", "–†–û–ó–ù–ò–ß–ù–´–ô")
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å main_improved.py")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
